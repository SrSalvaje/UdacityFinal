{"version":3,"sources":["img/pbf.png","img/google.png","components/Map.js","components/Searchbar.js","components/hamMenu.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Map","state","isMapRendered","map","renderMap","url","index","window","document","getElementsByTagName","script","createElement","src","async","defer","parentNode","insertBefore","loadMapScript","concat","initMap","_this","google","maps","getElementById","center","lat","lng","zoom","setState","renderMarkers","onMapError","console","log","infowindow","InfoWindow","__tempMarkers__","props","venues","forEach","venue","infoWindowcontent","name","categories","location","formattedAddress","marker","Marker","animation","Animation","DROP","position","id","category","search","push","addListener","setContent","open","getAnimation","setAnimation","BOUNCE","setTimeout","addMarkerToState","prevProps","this","markers","setMap","react_default","a","className","Component","gm_authFailure","err","querySelector","innerHTML","SearchBar","isDataReady","query","changeCat","val","changeQuery","value","text","_this2","_this$state","clickOnListItem","onChange","e","target","cat","key","onClick","ev","aria-label","tabIndex","address","city","href","HamMenu","type","classList","toggle","htmlFor","role","onKeyPress","event","keyCode","which","click","footer","fouricon","alt","glg","App","myTopPicks","filteredVenues","error","isInfoWindowOpen","fetchVenues","parameters","near","limit","v","fetch","then","response","json","data","groups","items","catch","alert","addMarkerToSate","Object","toConsumableArray","launchInfoWindow","infoWindow","info","close","ven","markerEquivalent","filter","preventDefault","focus","components_hamMenu","components_Searchbar","src_components_Map","src_components_footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f511d018.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pbf.f45b0a12.png\";","module.exports = __webpack_public_path__ + \"static/media/google.d2bd1f98.png\";","import React, { Component } from 'react';\r\nimport \"./Map.css\"\r\n\r\n\r\nclass Map extends Component {\r\n   \r\n    state={\r\n        isMapRendered:false,\r\n        map:null,\r\n        \r\n    }\r\n    //double purpose, stops the mapo from rerendering when the markers change and renders the new markers based on the user input\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.venues!==this.props.venues && this.state.map===null){\r\n            this.renderMap();  \r\n        }\r\n        if(prevProps.venues!==this.props.venues && this.state.map){\r\n            this.props.markers.map(marker=>marker.setMap(null))\r\n            \r\n            this.renderMarkers();\r\n        }\r\n        \r\n    }\r\n    \r\n    renderMap =()=>{\r\n        const APiKey=\"AIzaSyAn6EMjdX_667KspKuVZRvYDNEZHNQXKS4\"\r\n        loadMapScript(`https://maps.googleapis.com/maps/api/js?key=${APiKey}&callback=initMap`);\r\n        window.initMap=this.initMap; \r\n        \r\n    }\r\n\r\n    //Based on Google´s documentation\r\n    initMap=()=> {\r\n        //adapted from https://developers.google.com/maps/documentation/javascript/markers \r\n           const map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n                center:{lat: 55.609126, lng: 13.000811},\r\n                zoom:14  \r\n            });\r\n\r\n            if(!map){\r\n                this.onMapError();   \r\n                console.log(map);\r\n            }else{\r\n                this.setState({isMapRendered:true, \r\n                            map:map}, this.renderMarkers);\r\n                }\r\n    }\r\n        \r\n\r\n    renderMarkers=()=>{\r\n        const {map}=this.state\r\n        const infowindow = new window.google.maps.InfoWindow();\r\n        const __tempMarkers__=[];\r\n        //remove markers if  already showing\r\n        \r\n        //populates the info windows\r\n        this.props.venues.forEach(venue=>{\r\n            let infoWindowcontent = `<div class='infoWindow'>\r\n        <p class=\"vName\">${venue.venue.name}</p>\r\n        <p class=\"vCat\">${venue.venue.categories[0].name}</p>\r\n        <p class=\"vAdd\">Address: ${venue.venue.location.formattedAddress}</p>\r\n        </div>`;\r\n        \r\n                //for each venue create a marker\r\n        let marker = new window.google.maps.Marker({\r\n            map: map,\r\n            animation:window.google.maps.Animation.DROP,\r\n            position: {lat: venue.venue.location.lat, lng: venue.venue.location.lng},\r\n    \r\n            //sets same Id for the marker as the one for venue\r\n            \"id\":venue.venue.id, \r\n            //sets same catehory for the marker as the one for venue\r\n            \"category\":this.props.search===\"\"? \"topPicks\" : this.props.search,\r\n            \"venue\":venue.venue.name\r\n            //title: venue.venue.name\r\n            });\r\n        __tempMarkers__.push(marker);\r\n        //add marker to array\r\n        //__tempMarkers__.push(marker);\r\n        marker.addListener(\"click\", function () {\r\n            infowindow.setContent(infoWindowcontent)\r\n            infowindow.open(map, marker)  \r\n            \r\n        });\r\n\r\n        marker.addListener(\"mouseover\", function() {\r\n        if (marker.getAnimation() !== null) {\r\n            marker.setAnimation(null);\r\n            } else {\r\n            marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n            }\r\n            window.setTimeout(function(){\r\n                marker.setAnimation(null);\r\n                }, 1000);\r\n                \r\n        })\r\n        \r\n    }) \r\n    //adds the markers to the state in App.js\r\n    this.props.addMarkerToState(__tempMarkers__);\r\n            \r\n    }\r\n  render() {\r\n    return (\r\n    <div className=\"mapContainer\">\r\n        <div id=\"map\">     \r\n        </div>\r\n    </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n/*This function is based on the awesome tutorial by Elharony @ https://www.elharony.com https://www.youtube.com/watch?v=W5LhLZqj76s \r\nI learned more in his 15 min video than on all the tutorials for react scriptloaders or react google map packages\r\n*/\r\n\r\nfunction loadMapScript(url){\r\n    const index = window.document.getElementsByTagName(\"script\")[0];\r\n    const script = window.document.createElement(\"script\");\r\n    script.src=url;\r\n    script.async=true;\r\n    script.defer=true;\r\n    index.parentNode.insertBefore(script, index);\r\n    \r\n   \r\n}\r\n//error function taken based on https://developers.google.com/maps/documentation/javascript/events\r\nwindow.gm_authFailure=(err)=>{\r\n    const mapWarning = document.querySelector('#map');\r\n    mapWarning.innerHTML = `<div class='warn-dialog'>\r\n    <h2 class='warn-t'>Oh The Humanity!!!</h2>\r\n    <p class='warn-me'>Google Maps is burning! Please check the console or come back later.<p>\r\n    <p class='warn-me'>If this is a Google Maps error you can still use the navigation bar to find the coolest places in town.</p></div>`;\r\n}\r\n\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\nimport './Searchbar.css';\r\n\r\n\r\n\r\nclass SearchBar extends Component {\r\n   \r\n    state={\r\n        isDataReady:false,\r\n        query:\"\"\r\n    }\r\n\r\n   //checks for updates on venues fetched and sets the conditional used by the render method\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.venues!==this.props.venues){\r\n            this.setState({isDataReady:true})\r\n        }      \r\n    }\r\n//used to pass the search parameter to the state at App.js\r\n    changeCat=(val)=>{\r\n        this.props.changeQuery(val.value)\r\n        this.setState({query:val.text})\r\n    }\r\n\r\n    \r\n\r\n  render() {\r\n      const {isDataReady,query}=this.state;\r\n      const {clickOnListItem}=this.props;\r\n\r\n          \r\n    return (\r\n    <div className=\"side-bar\">\r\n        <select className=\"searchCont\" id=\"searchBar\"  /* value={query} */  onChange={(e)=>this.changeCat(e.target)} >\r\n            <option value={query} >{query ? query : \"Top Picks\"}</option>\r\n            \r\n             {this.props.categories.map(cat=>{\r\n                return <option key={cat.value} value={cat.value}>{cat.text}</option>\r\n\r\n            })} \r\n        </select>   \r\n                <ul className=\"listCont\">\r\n                {isDataReady && (\r\n                this.props.venues.map(venue=>(\r\n                <li className=\"listItem\" key={venue.venue.id} onClick={(ev)=>clickOnListItem(venue, ev)}>\r\n                    <div className=\"locationCont\"  aria-label=\"Venue\" tabIndex=\"0\">\r\n                        <p className=\"lName\"  aria-label=\"Name\" tabIndex=\"0\">{venue.venue.name}</p>\r\n                        <p className=\"lCat\"  aria-label=\"Type\" tabIndex=\"0\">{venue.venue.categories[0].name ? venue.venue.categories[0].name : \"No Category Available\"}</p> \r\n                        <p className=\"lAdd\"  aria-label=\"Address\" tabIndex=\"0\" >{`Address: ${venue.venue.location.address}, ${venue.venue.location.city}`}</p>\r\n                         <a tabIndex=\"0\" href=\"#searchBar\" className=\"skip-link\" >Go back to search bar</a> \r\n                    </div>      \r\n                </li>\r\n                ))\r\n            )\r\n            }\r\n            </ul>\r\n    </div>\r\n    \r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport \"./hamMenu.css\";\r\n\r\nconst HamMenu = ()=>{\r\n     //open the nav menu\r\n    const openSide=()=>{\r\n        const sidebar=document.querySelector(\".side-bar\");\r\n        sidebar.classList.toggle(\"openSide\");\r\n        /* if(sidebar.style.width===\"\" || sidebar.style.width===\"0px\"){\r\n        //sidebar.style.width=\"30vw\";\r\n       \r\n        }else{\r\n        sidebar.style.width=\"0\";\r\n        }   */  \r\n   }\r\n   //allows users to use the enter button to open menu\r\n    const enterAccessible=(event)=> {\r\n        let code = event.keyCode || event.which;\r\n        if(code === 13) {\r\n            document.getElementById(\"openSidebarMenu\").click();\r\n        }\r\n    } \r\n   \r\n    return(\r\n        \r\n    <div>\r\n        <input\r\n        type=\"checkbox\"\r\n        className=\"openSidebarMenu\"\r\n        id=\"openSidebarMenu\"\r\n        onClick={openSide}/>\r\n    <label htmlFor=\"openSidebarMenu\" className=\"sidebarIconToggle\" aria-label=\"menu\" role=\"button\"tabIndex=\"0\" onKeyPress={enterAccessible} >\r\n        <div className=\"spinner diagonal part-1\" />\r\n        <div className=\"spinner horizontal\" />\r\n        <div className=\"spinner diagonal part-2\" />\r\n    </label>\r\n\r\n    </div>\r\n      \r\n    )\r\n}\r\n    \r\nexport default HamMenu","import React from 'react';\r\nimport \"./footer.css\";\r\nimport fouricon from \"../img/pbf.png\";\r\nimport glg from \"../img/google.png\";\r\n\r\nconst footer=()=>{\r\n    return(\r\n        <footer className=\"footer\">\r\n           <div className=\" fsq\"><img className=\"fourSq\" src={fouricon} alt=\"Powered by FourSquare\"/></div>\r\n           <div className=\" glg\"><img className=\"googleLogo\" src={glg} alt=\"Powered by Google\"/></div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from 'react';\r\nimport Map from \"./components/Map\";\r\nimport Searchbar from \"./components/Searchbar\"\r\nimport './App.css';\r\nimport HamMenu from \"./components/hamMenu\"\r\nimport Footer from \"./components/footer\"\r\n\r\nclass App extends Component {\r\n  state={\r\n    myTopPicks:null,\r\n    markers:[],\r\n    venues:[],\r\n    filteredVenues:[],\r\n    search:\"\", \r\n    error:false,\r\n    categories:[\r\n      {value:\"topPicks\", text: \"Top Picks\"},\r\n    {value:\"food\", text: \"Food\"}, {value:\"drinks\", text:\"Bars\"}, \r\n    {value:\"coffee\", text:\"Coffee\"}, {value:\"shops\", text:\"Shopping\"}, {value:\"arts\", text:\"Art\"}, \r\n    {value:\"outdoors\", text:\"Outdoors\"}, {value:\"sights\", text:\"Sights\"}, {value:\"trending\", text:\"Trending\"}],\r\n    isInfoWindowOpen:false  \r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.fetchVenues()\r\n  }\r\n  \r\n//changes the search term based on user input from nav bar\r\n  changeQuery=(value)=>{\r\n    this.setState({search:value}, this.fetchVenues)\r\n  }\r\n//fecth reuqest for Foursqare\r\n   fetchVenues = ()=> {\r\n    const parameters={\r\n      query:this.state.search ? this.state.search: \"topPicks\",\r\n      near:\"Malmo,Sweden\",\r\n      limit:\"30\",\r\n      v:\"20190204\"\r\n\r\n    },\r\n    client_id=\"K4Z0NZV2MFC43ORGTT5ZLIDUQO3DVNUCLHIB33QS5W0KO54K\",\r\n    client_secret=\"O0ZIQFPBW5GTWXJRUG2NFVHYR1HARB4RZCDEFRA0KXH55Y2V\";\r\n    \r\n    let baseUrl='https://api.foursquare.com/v2/venues/';\r\n    let url = baseUrl + `explore?client_id=${client_id}&client_secret=${client_secret}&v=${parameters.v}&near=${parameters.near}}&limit=${parameters.limit}&section=${parameters.query}`;\r\n    \r\n    fetch(url)\r\n    .then(response=>response.json())\r\n    .then(data=> {\r\n      if(!this.state.myTopPicks){\r\n        this.setState({\r\n          myTopPicks:data.response.groups[0].items,\r\n          venues:data.response.groups[0].items\r\n        }); \r\n      }else{\r\n        this.setState({venues:data.response.groups[0].items})\r\n      }\r\n      \r\n      }).catch(function(error){\r\n      alert( \"Oh no, it seems a dingo eat your Foursquare markers! Check back later.\" );\r\n      })\r\n  }\r\n  \r\n  addMarkerToSate=(__tempMarkers__)=>{\r\n    ///create a new array by filtering the individual temp markers against the individual state markers and retruning only the ones that dont repeat\r\n    //I need this to remove the markers when a new category is chosen\r\n    this.setState({markers:[...__tempMarkers__]});     \r\n  }\r\n  \r\n  launchInfoWindow =(venue, marker)=>{\r\n    let infoWindow;\r\n    if(this.state.isInfoWindowOpen===false){\r\n      info();\r\n      this.setState({isInfoWindowOpen:infoWindow});\r\n      \r\n    }else{\r\n      this.state.isInfoWindowOpen.close();\r\n      this.setState({isInfoWindowOpen:false})\r\n      info();\r\n      this.setState({isInfoWindowOpen:infoWindow});\r\n    }\r\n\r\n    function info(){\r\n      infoWindow = new window.google.maps.InfoWindow();\r\n      let infoWindowcontent = `<div class='infoWindow'>\r\n        <p class=\"vName\">${venue.venue.name}</p>\r\n        <p class=\"vCat\">${venue.venue.categories[0].name}</p>\r\n        <p class=\"vAdd\">Address: ${venue.venue.location.formattedAddress}</p>\r\n        </div>`;\r\n      infoWindow.setContent(infoWindowcontent);\r\n      infoWindow.open(window.google.maps.Map, marker);\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  clickOnListItem=(ven,ev)=>{\r\n    let markerEquivalent;\r\n    //if the event target is not the skip link\r\n     if(ev.target.classList.value!==\"skip-link\"){\r\n      //open the info window for that venue\r\n      markerEquivalent=this.state.markers.filter(marker=>ven.venue.id===marker.id)[0];\r\n      this.launchInfoWindow(ven, markerEquivalent);\r\n      //makes the marker bounce\r\n      markerEquivalent.setAnimation(window.google.maps.Animation.BOUNCE);\r\n      //for 5 seconds\r\n      window.setTimeout(function(){\r\n        markerEquivalent.setAnimation(null);\r\n      }, 5000);\r\n     }else{\r\n       //if the event target is the skip link\r\n        ev.preventDefault(); \r\n        document.querySelector(\"#searchBar\").focus();\r\n     }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"pageHeader\"><h1>My Malmö</h1></header>\r\n        {/*Special thanks to artnerdnet for her awesome hamburger menu https://github.com/artnerdnet*/}\r\n        <HamMenu/>\r\n        <main className=\"container\">\r\n           <Searchbar\r\n           venues={this.state.venues}\r\n           filteredVenues={this.filteredVenues}\r\n           clickOnListItem={this.clickOnListItem}\r\n           categories={this.state.categories}\r\n           changeQuery={this.changeQuery}\r\n           query={this.state.query}\r\n           markers={this.state.markers}/>  \r\n          <Map\r\n          fetchVenues={this.fetchVenues}\r\n          venues={this.state.venues}\r\n          filteredVenues={this.filteredVenues}\r\n          addMarkerToState={this.addMarkerToSate}\r\n          search={this.state.search}\r\n          markers={this.state.markers}/>\r\n        </main>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n  \r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n    \r\n      return;\r\n    }\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        \r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n             \r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}